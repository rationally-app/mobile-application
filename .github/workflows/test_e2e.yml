name: Pre-Commit E2E Tests

# For now leaving as PR so that we can test the functionality without pushing to master branch
on: [pull_request]

# on:
#   schedule:
#   # Runs E2E every day at midnight (1600UTC)
#   - cron: "0 16 * * *"
#   # Runs on every release to prod
#   push:
#     tags:
#       - "prod-[1-9]+.[0-9]+.[0-9]+" # Push events to matching prod-*, i.e.prod-20.15.10

jobs:
  publish:
    name: Publish to E2E Channel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install Application
        run: npm install
      - uses: expo/expo-github-action@v5
        with:
          expo-packager: npm
          expo-username: ${{ secrets.EXPO_CLI_TEST_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_TEST_PASSWORD }}
          expo-cache: true
      - name: Expo Publish Channel
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          APP_BUILD_VERSION: ${{ github.run_number }}
          APP_BINARY_VERSION: 1.0.0
          DOMAIN_FORMAT: ${{ secrets.TEST_DOMAIN_FORMAT }}
        run: expo publish --non-interactive --release-channel e2e
  e2e_test:
    name: E2E PCloudy
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "rationally-app/mobile-e2e"
          token: ${{ secrets.MUSKET_DEV_GITHUB_ACCESS_TOKEN }}
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Setup Appium
        run: npm install appium -g
      - name: Setup E2E Environment
        run: |
          wget -O Exponent.apk http://expo.io/--/api/v2/versions/download-android-apk
          pip3 install -r requirements.txt
      - name: Run E2E Tests
        env:
          RELEASE_CHANNEL: e2e
        run: ./e2e_run_cdc_pCloudy.sh
      - name: Upload Appium Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: |
            ./log.html
            ./report.html
            ./output.xml
            ./appium-screenshot-?.png
