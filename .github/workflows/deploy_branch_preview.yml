name: Deploy Branch Preview

on: [pull_request]

# Ensure only a single job or workflow using the same concurrency group will run at a time
# When a concurrent job or workflow is queued, if another job or workflow using the same concurrency group in the repository is in progress,
# the queued job or workflow will be pending.
concurrency:
  group: ${{ github.ref }}-deploy-branch-preview # The branch or tag ref that triggered the workflow run.

jobs:
  get_version:
      name: Get version
      runs-on: ubuntu-latest
      outputs:
        latestBinaryVersion: ${{ steps.latestBinaryVersion.outputs.version }}
      steps:
        - uses: actions/checkout@v2
          with:
            ref: ${{ github.head_ref }}
        - name: Fetch Tags
          run: |
            git fetch --prune --unshallow --tags -f
        - uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - uses: expo/expo-github-action@v5
          with:
            expo-packager: npm
            expo-username: ${{ secrets.EXPO_CLI_TEST_USERNAME }}
            expo-password: ${{ secrets.EXPO_CLI_TEST_PASSWORD }}
            expo-cache: true
        - name: Cache Node Modules
          uses: actions/cache@v2
          env:
            cache-name: cache-node-modules
          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
        - name: Install Packages
          run: |
            npm config set //npm.pkg.github.com/:_authToken $NPM_TOKEN
            npm ci
          env:
            NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
        - name: Get Latest Binary Version # Binary Version will be x.x.x based on the latest tag
          id: latestBinaryVersion
          run: |
            # Release tag finds the lastest tag in the tree branch - i.e. prod-x.x.x
            RELEASE_TAG=$(echo $(git describe --tags --abbrev=0))
            # Using param substitution, we output x.x.x instead
            echo "::set-output name=version::${RELEASE_TAG#*-}"
        - name: Echo Version Details
          run: |
            echo Build number is $GITHUB_RUN_NUMBER
            echo Latest release is ${{ steps.latestBinaryVersion.outputs.version }}
  build_android:
    needs: [get_version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm
      - uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          packager: npm
          token: ${{ secrets.EXPO_TOKEN_PRD }}
      - name: Install Packages
        run: |
          npm config set //npm.pkg.github.com/:_authToken $NPM_TOKEN
          npm ci
        env:
          NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
      - name: Build Android Release
        env:
          NODE_OPTIONS: --max_old_space_size=7168
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          APP_BUILD_VERSION: ${{ github.run_number }}
          APP_BINARY_VERSION: ${{ needs.get_version.outputs.latestBinaryVersion }}
          DOMAIN_FORMAT: ${{ secrets.DOMAIN_FORMAT }}
          NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
        run: |
          eas build --non-interactive --platform android > buildLogAndroid.txt
          cat buildLogAndroid.txt
      # - name: Parse Asset URL
      #   id: androidUrl
      #   run: |
      #     ASSET_URL=$(cat buildLogAndroid.txt | tail | egrep -o 'https?://expo\.dev/artifacts/[^ ]+')
      #     echo The android url is $ASSET_URL
      #     echo "::set-output name=assetUrl::$ASSET_URL"
      # - name: Download APK Asset
      #   run: wget -O supplyally-${{ env.GITHUB_REF_SLUG }}.apk ${{ steps.androidUrl.outputs.assetUrl }}
      # - name: Upload Release Asset
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
      #     file: ./supplyally-${{ env.GITHUB_REF_SLUG }}.apk
      #     asset_name: supplyally-${{ env.GITHUB_REF_SLUG }}.apk
      #     tag: ${{ github.ref }}
  # build_ios:
  #   needs: [get_version]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: rlespinasse/github-slug-action@v3.x
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16.x
  #         cache: npm
  #     - uses: expo/expo-github-action@v7
  #       with:
  #         expo-version: latest
  #         eas-version: latest
  #         token: ${{ secrets.EXPO_TOKEN_PRD }}
  #     - name: Install Packages
  #       run: |
  #         npm config set //npm.pkg.github.com/:_authToken $NPM_TOKEN
  #         npm ci
  #       env:
  #         NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
  #     - name: Build IOS Release
  #       env:
  #         NODE_OPTIONS: --max_old_space_size=7168
  #         SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  #         SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
  #         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #         SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  #         APP_BUILD_VERSION: ${{ github.run_number }}
  #         APP_BINARY_VERSION: ${{ needs.get_version.outputs.latestBinaryVersion }}
  #         DOMAIN_FORMAT: ${{ secrets.DOMAIN_FORMAT }}
  #       run: |
  #         eas build --non-interactive --platform android > buildLogIOS.txt
  #         cat buildLogIOS.txt
      # - name: Parse Asset URL
      #   id: iosUrl
      #   run: |
      #     ASSET_URL=$(cat buildLogIOS.txt | tail | egrep -o 'https?://expo\.dev/artifacts/[^ ]+')
      #     echo The IOS url is $ASSET_URL
      #     echo "::set-output name=assetUrl::$ASSET_URL"
      # - name: Download IPA Asset
      #   run: wget -O supplyally-${{ env.GITHUB_REF_SLUG }}.ipa ${{ steps.iosUrl.outputs.assetUrl }}
      # - name: Upload Release Asset
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
      #     file: ./supplyally-${{ env.GITHUB_REF_SLUG }}.ipa
      #     asset_name: supplyally-${{ env.GITHUB_REF_SLUG }}.ipa
      #     tag: ${{ github.ref }}
