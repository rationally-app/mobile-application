name: Deploy Branch Preview

on: [pull_request]

# Ensure only a single job or workflow using the same concurrency group will run at a time
# When a concurrent job or workflow is queued, if another job or workflow using the same concurrency group in the repository is in progress,
# the queued job or workflow will be pending.
concurrency:
  group: ${{ github.ref }}-deploy-branch-preview # The branch or tag ref that triggered the workflow run.

jobs:
  # pr_title_lint:
  #   name: PR Title Lint
  #   runs-on: ubuntu-latest
  #   continue-on-error: false
  #   timeout-minutes: 5

  #   steps:
  #     - name: check if PR title follows conventional commits specs
  #       uses: amannn/action-semantic-pull-request@v3.4.2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
  #         # using github token for external/dependabot PR,
  #         # personal access tokens in secrets will not be accessible in
  #         # pipeline for external user PRs
  # markdown_lint:
  #   name: Markdown Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.x
  #     - name: Install Packages
  #       run: |
  #         npm config set //npm.pkg.github.com/:_authToken $NPM_TOKEN
  #         npm ci
  #       env:
  #         NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
  #     - name: Check Markdown Lint
  #       run: npm run markdown:lint
  # test:
    # name: Lint & Test
    # runs-on: ubuntu-latest
    # steps:
    #   - uses: actions/checkout@v2
    #   - uses: actions/setup-node@v3
    #     with:
    #       node-version: 16.x
    #   - name: Cache Node Modules
    #     uses: actions/cache@v2
    #     env:
    #       cache-name: cache-node-modules
    #     with:
    #       # npm cache files are stored in `~/.npm` on Linux/macOS
    #       path: ~/.npm
    #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #       restore-keys: |
    #         ${{ runner.os }}-build-${{ env.cache-name }}-
    #         ${{ runner.os }}-build-
    #         ${{ runner.os }}-
    #   - name: Install Packages
    #     run: |
    #       npm config set //npm.pkg.github.com/:_authToken $NPM_TOKEN
    #       npm ci --legacy-peer-deps
    #     env:
    #       NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
    #   - name: Typecheck
    #     run: npx --no-install tsc --noEmit
    #   - name: Check Lint
    #     run: npm run lint
    #   - name: Set Timezone to +8 (Ubuntu)
    #     run: sudo timedatectl set-timezone Asia/Singapore
    #   - name: Test
    #     run: npm run test -- --coverage
    #     env:
    #       SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
    #       SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
    #       SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    #       SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    #       APP_BUILD_VERSION: ${{ github.run_number }}
    #       APP_BINARY_VERSION: "dev"
    #       DOMAIN_FORMAT: ${{ secrets.TEST_DOMAIN_FORMAT }}
  deploy_branch_preview:
    name: Deploy Branch Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch Tags
        run: |
          git fetch --prune --unshallow --tags -f
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: expo/expo-github-action@v7
        with:
          eas-version: latest
          expo-version: latest
          packager: npm
          token: ${{ secrets.EXPO_TOKEN }}
          eas-cache: true
          expo-cache: true
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Packages
        run: |
          npm config set //npm.pkg.github.com/:_authToken $NPM_TOKEN
          npm ci --legacy-peer-deps
        env:
          NPM_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
      - name: Get Latest Binary Version # Binary Version will be x.x.x based on the latest tag
        id: latestBinaryVersion
        run: |
          # Release tag finds the latest tag in the tree branch - i.e. prod-x.x.x
          RELEASE_TAG=$(echo $(git describe --tags --abbrev=0))
          # Using param substitution, we output x.x.x instead
          echo "::set-output name=version::${RELEASE_TAG#*-}"
      - name: Echo Version Details
        run: |
          echo Build number is $GITHUB_RUN_NUMBER
          echo Latest release is ${{ steps.latestBinaryVersion.outputs.version }}
      - name: Get commit message
        id: getCommitMessage
        run: |
          MSG=$(git log --format=%B -n 1 ${{github.event.after}})
          echo "::set-output name=commit_message::${MSG}"
      - name: Eas Update Channel
        env:
          NODE_OPTIONS: --max_old_space_size=7168
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          APP_BUILD_VERSION: ${{ github.run_number }}
          APP_BINARY_VERSION: ${{ steps.latestBinaryVersion.outputs.version }}
          DOMAIN_FORMAT: ${{ secrets.TEST_DOMAIN_FORMAT }}
          PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
        id: update
        run: |
          eas update --non-interactive --branch pr${{ github.event.number }} --message "${{ steps.getCommitMessage.outputs.commit_message }}" --json | jq '.[].id' -r > updates.txt
          ANDROID_URL="$(sed -n 1p updates.txt)"
          IOS_URL="$(sed -n 2p updates.txt)"
          echo "::set-output name=androidUrl::$ANDROID_URL"
          echo "::set-output name=iosUrl::$IOS_URL"
      - name: Eas Update Storybook Channel
        id: updateStorybook
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          APP_BUILD_VERSION: ${{ github.run_number }}
          APP_BINARY_VERSION: ${{ steps.latestBinaryVersion.outputs.version }}
          DOMAIN_FORMAT: ${{ secrets.TEST_DOMAIN_FORMAT }}
          PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
          START_STORYBOOK: true
        run: |
          eas update --non-interactive --branch storybook-pr${{ github.event.number }} --message "${{ steps.getCommitMessage.outputs.commit_message }}" --json | jq '.[].id' -r > updates.txt
          ANDROID_URL="$(sed -n 1p updates.txt)"
          IOS_URL="$(sed -n 2p updates.txt)"
          echo "::set-output name=androidUrl::$ANDROID_URL"
          echo "::set-output name=iosUrl::$IOS_URL"
      - name: Add Comment To PR
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_SUPPLYALLY_BOT }}
        with:
          message: |
            ## Andriod Application
            ![Expo QR](https://qr.expo.dev/eas-update?updateId=${{ steps.update.outputs.androidUrl }}&appScheme=exp)

            ## iOS Application
            ![Expo QR](https://qr.expo.dev/eas-update?updateId=${{ steps.update.outputs.iosUrl }}&appScheme=exp)

            ---

            ## Andriod Storybook
            ![Expo QR](https://qr.expo.dev/eas-update?updateId=${{ steps.update.updateStorybook.androidUrl }}&appScheme=exp)

            ## iOS Storybook
            ![Expo QR](https://qr.expo.dev/eas-update?updateId=${{ steps.update.updateStorybook.iosUrl }}&appScheme=exp)
