name: Review PR

on: [pull_request]

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: install
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test -- --coverage
  publish:
    name: deploy_branch
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
          expo-cache: true
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: install
        run: npm install
      - name: expo_publish_channel
        run: expo publish --non-interactive --release-channel pr${{ github.event.number }}
      - name: expo_publish_storybook_channel
        run: expo publish --non-interactive --release-channel storybook-${{ github.event.number }}
      - name: Add comment to PR
        env:
          URL: ${{ github.event.issue.pull_request.url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_ID: ${{ github.event.number }}
          GITHUB_PROJECT: "justussoh/mobile-application"
          EXPO_PROJECT: "@justussoh/rationally"
        run: |
          PUBLISH_TEXT="Published to https://exp.host/$EXPO_PROJECT?release-channel=$PULL_REQUEST_ID"
          STORYBOOK_PUBLISH_TEXT="Published to https://exp.host/$EXPO_PROJECT?release-channel=storybook-$PULL_REQUEST_ID"
          QR_CODE="https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=exp://exp.host/$EXPO_PROJECT?release-channel=$PULL_REQUEST_ID"
          QR_CODE_STORYBOOK="https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=exp://exp.host/$EXPO_PROJECT?release-channel=storybook-$PULL_REQUEST_ID"

          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d '{ "body": "## Application\n![Expo QR]('"$QR_CODE"')\n'"$PUBLISH_TEXT"'\n\n## Storybook\n![Expo QR]('"$QR_CODE_STORYBOOK"')\n'"$STORYBOOK_PUBLISH_TEXT"'" }'
