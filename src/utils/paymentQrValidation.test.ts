import {
  PaymentQRDeformedError,
  PaymentQRMissingInfoError,
  SGQRParseError,
} from "@rationally-app/payment-qr-parser";
import { ERROR_MESSAGE } from "../context/alert";
import isValidPaymentQR from "./paymentQrValidation";

describe("isValidPaymentQR Test", () => {
  it("should parse SGQR payload properly", () => {
    expect.assertions(1);

    const sgqrPayload =
      "00020101021102164761360000000*1704155123456789123451110123456789012153123456789012341531250003440001034450003445311000126330015SG.COM.DASH.WWW0110000005550127670014A00000076200010120COM.LQDPALLIANCE.WWW021512345678901234503020028660011SG.COM.OCBC0147OCBCP2P629A358D-ECE7-4554-AD56-EBD12D84CA7E4F7329500006SG.EZI013603600006-76bb-4a5a-aa1a-fbcb64d6ecf530850013SG.COM.EZLINK01201234567890123456-1230204SGQR0324A123456,B123456,C12345670404A23X31260008COM.GRAB0110A93FO3230Q32390007COM.DBS011012345678900210123456789033900011SG.COM.NETS01230201401832831128823590002150001118703240000308885872010901199084E5DC3D834430017COM.QQ.WEIXIN.PAY011012345678900204123435660010SG.COM.UOB014845D233507F5E8C306E3871A4E9FACA601A80C114B5645E5D36840009SG.PAYNOW010120216+621234567890123030100408209912310525123456789012345678901234537270009SG.AIRPAY0110A11BC0000X51860007SG.SGQR0112180307510317020701.0003030608100604020205031380609Counter010708201804075204581453037025802SG5916FOOD XYZ PTE LTD6009SINGAPORE6106081006626001081234567R0607876543050330015SG.COM.DASH.WWW0110000005550263045E8D";

    expect(isValidPaymentQR(sgqrPayload)).toBe(true);
  });

  // TODO: Refine test when policy is used to filter supported payment rails
  it("should return false if payload does not contain NETS", () => {
    expect.assertions(1);
    const payloadWithoutNETS =
      "00020101021126520008com.grab0136c99990dc-ab89-442f-accb-1fd96dd4eff627330015sg.com.dash.www0110000000901628460010com.myfave0128https://myfave.com/qr/6ntdz329360009SG.AIRPAY0119936009180000000468751810007SG.SGQR01121809112DE3C7020701.000703065743700402010503105060400000708202012105204581253037025802SG5920UDDERS UPPER THOMSON6009Singapore63047AEC";
    expect(isValidPaymentQR(payloadWithoutNETS)).toStrictEqual(false);
  });
});

describe("tests for errors thrown during isValidPaymentQR", () => {
  it("should throw error when parsing deformed payment QR payload", () => {
    expect.assertions(1);
    const deformedPaymentQRPayload = "deformedPayload";
    expect(() => isValidPaymentQR(deformedPaymentQRPayload)).toThrow(
      new PaymentQRDeformedError(ERROR_MESSAGE.INVALID_IDENTIFIER_INPUT)
    );
  });

  it("should throw error when parsing invalid SGQR payload", () => {
    expect.assertions(1);
    const invalidSGQRPayload =
      "0002010102112636009SG.PAYNOW010120210200408850D030115204000053037025802SG5913EZB PTE. LTD.6009Singapore6304C65";
    expect(() => isValidPaymentQR(invalidSGQRPayload)).toThrow(
      new SGQRParseError(ERROR_MESSAGE.INVALID_IDENTIFIER_INPUT)
    );
  });

  it("should throw error when parsing SGQR payload with missing info", () => {
    expect.assertions(1);
    const missingInfoSGQRPayload =
      "00020101021126370009SG.PAYNOW010130210200408850D030115204000053037025802SG5913EZB PTE. LTD.6009Singapore63043F6B";
    expect(() => isValidPaymentQR(missingInfoSGQRPayload)).toThrow(
      new PaymentQRMissingInfoError(ERROR_MESSAGE.INVALID_IDENTIFIER_INPUT)
    );
  });
});
